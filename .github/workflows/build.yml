name: Build
run-name: ${{ github.actor }} build BlingFire
on: [push]
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "blingfiretokdll.dll",
            build_type: "Release",
            cc: "cl",
            ccx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            generators: "Visual Studio 17 2022"
          }
        - {
            name: "Windows Latest MinGW",
            os: windows-latest,
            artifact: "blingfiretokdll.dll",
            build_type = "Release",
            cc: "gcc",
            cxx: "g++"
          }
        - {
            name: "Ubuntu latest GCC",
            os: ubuntu-latest,
            artifact: "libblingfiretokdll.so",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++"
          }
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on Windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install cmake
          cmake --version
      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          cmake --version
          gcc --version
      - name: Build
        shell: bash
        run: |
          mkdir Release
          cd Release
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
      - uses: actions/upload-artifact@v3
        with:
          name: sharedlib_${{ matrix.config.os }}
          path: Release/${{ matrix.config.artifact }}
